# Combine-array-sensor-data
# based on "Process-arraysensorsdf-Sensor-Data-RCode"
#     (run that file on new data downloads first to create inputs!)
#
# Combines data from most recent download date ("NewDatapath")
#  with old array data ("DataArchivepath")
#  and saves complete dataset in the DataArchive
#  for seven files:
#                   fulldaily.csv
#                   O2dailywideavg.csv
#                   O2hourly.csv
#                   tempdailywideavg.csv
#                   temphourly.csv
#                   vwcdailywideavg.csv
#                   vwchourly.csv
######################################################################
# load packages
library(plyr)
library(dplyr)
# locate datasets
DataArchivepath <- "~/Desktop/Datalogger_downloads/DataArchive/"
# old data; this should never change unless changing computers
# christine version; uncomment when CSO doing things
#DataArchivepath <- "~/Documents/GITHUB/cso044code_HotSpotsHotMoments/HotSpotsHotMomentsAnalysis/HotSpotsHotMoments-Data-Raw/Sensors/SurfaceDataArchive/"
NewDatapath      <- "~/Desktop/Datalogger_downloads/3-14-17/Surface results/"
# this should change each time data is dowloaded
# christine version; uncomment when CSO doing things
#NewDatapath <- "~/Documents/GITHUB/cso044code_HotSpotsHotMoments/HotSpotsHotMomentsAnalysis/HotSpotsHotMoments-Data-Raw/Sensors/SurfaceNewest/"
# when christine was adding in the very old data
#NewDatapath <- "~/Documents/GITHUB/cso044code_HotSpotsHotMoments/HotSpotsHotMomentsAnalysis/HotSpotsHotMoments-Data-Raw/Sensors/SurfaceOutOfDate/OldestCSOHas/renamedtomatchcode/"
# create master list of file names
allfiles <- c("fulldaily","O2dailywideavg","O2hourly",
"tempdailywideavg","temphourly",
"vwcdailywideavg","vwchourly")
# bring in old data
OldFiles <- list()
for(i in 1:7) {
OldFiles[[i]] <- as.data.frame(read.csv(paste(DataArchivepath,allfiles[i],".csv",sep=""), stringsAsFactors=FALSE))
names(OldFiles)[i] <- paste("Old",allfiles[i],sep="")
}
# bring in new data
NewFiles <- list()
for(i in 1:7) {
NewFiles[[i]] <- as.data.frame(read.csv(paste(NewDatapath,allfiles[i],".csv",sep=""), stringsAsFactors=FALSE))
names(NewFiles)[i] <- paste("New",allfiles[i],sep="")
}
# Bind datasets
CompleteFiles <- list()
for(i in 1) {
stopifnot(names(OldFiles[[i]])==names(NewFiles[[i]]))
CompleteFiles[[i]] <- join(OldFiles[[i]],NewFiles[[i]],
type="full",by=c("Date2","SensorID"))
names(CompleteFiles)[i] <- paste("Complete",allfiles[i],sep="")
}
for(i in c(2,4,6)) {
stopifnot(names(OldFiles[[i]])==names(NewFiles[[i]]))
CompleteFiles[[i]] <- join(OldFiles[[i]],NewFiles[[i]],
type="full",by="Date2")
names(CompleteFiles)[i] <- paste("Complete",allfiles[i],sep="")
}
for(i in c(3,5,7)) {
stopifnot(names(OldFiles[[i]])==names(NewFiles[[i]]))
CompleteFiles[[i]] <- join(OldFiles[[i]],NewFiles[[i]],type="full",by="TIMESTAMP2")
names(CompleteFiles)[i] <- paste("Complete",allfiles[i],sep="")
}
library(ggplot2)
library(lubridate)
fulldaily <- CompleteFiles[[1]]
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgO2pct,color=TopoLocation)) +
geom_point() +
labs(x="Date",y="O2 concentration")
ggsave("O2.pdf", path = DataArchivepath)
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgTemp,color=TopoLocation)) +
geom_point() +
labs(x="Date",y="Soil Temp")
ggsave("Soil Temp.pdf", path = DataArchivepath)
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgVWC,color=TopoLocation)) +
geom_point() +
labs(x="Date",y="Volumetric Water Content")
ggsave("VWC.pdf", path = DataArchivepath)
# Save all data
for(i in 1:7){
write.csv(CompleteFiles[[i]],
file=paste(DataArchivepath,allfiles[i],".csv",sep=""),
row.names=FALSE)
}
?ggplot
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgO2pct,color=TopoLocation)) +
geom_point() +
scale_y_continuous(limits=c(-2,22)) +
labs(x="Date",y="O2 concentration")
ggsave("O2.pdf", path = DataArchivepath)
# Combine-depth-sensor-data
# based on "Process-depthsensorsdf-Sensor-Data-RCode"
#     (run that file on new data downloads first to create inputs!)
#
# Combines data from most recent download date ("NewDatapath")
#  with old array data ("DataArchivepath")
#  and saves complete dataset in the DataArchive
#  for seven files:
#                   fulldaily.csv
#                   O2dailywideavg.csv
#                   O2hourly.csv
#                   tempdailywideavg.csv
#                   temphourly.csv
#                   vwcdailywideavg.csv
#                   vwchourly.csv
######################################################################
# load packages
library(plyr)
library(dplyr)
# locate datasets
DataArchivepath <- "~/Desktop/Datalogger_downloads/DepthDataArchive/"
# old data; this should never change unless changing computers
# christine version; uncomment when CSO doing things
#DataArchivepath <- "~/Documents/GITHUB/cso044code_HotSpotsHotMoments/HotSpotsHotMomentsAnalysis/HotSpotsHotMoments-Data-Raw/Sensors/SurfaceDataArchive/"
NewDatapath      <- "~/Desktop/Datalogger_downloads/3-14-17/Depth results/"
# this should change each time data is dowloaded
# christine version; uncomment when CSO doing things
#NewDatapath <- "~/Documents/GITHUB/cso044code_HotSpotsHotMoments/HotSpotsHotMomentsAnalysis/HotSpotsHotMoments-Data-Raw/Sensors/SurfaceNewest/"
# when christine was adding in the very old data
#NewDatapath <- "~/Documents/GITHUB/cso044code_HotSpotsHotMoments/HotSpotsHotMomentsAnalysis/HotSpotsHotMoments-Data-Raw/Sensors/SurfaceOutOfDate/OldestCSOHas/renamedtomatchcode/"
# create master list of file names
allfiles <- c("fulldaily","O2dailywideavg","O2hourly",
"tempdailywideavg","temphourly",
"vwcdailywideavg","vwchourly")
# bring in old data
OldFiles <- list()
for(i in 1:7) {
OldFiles[[i]] <- as.data.frame(read.csv(paste(DataArchivepath,allfiles[i],".csv",sep=""), stringsAsFactors=FALSE))
names(OldFiles)[i] <- paste("Old",allfiles[i],sep="")
}
# bring in new data
NewFiles <- list()
for(i in 1:7) {
NewFiles[[i]] <- as.data.frame(read.csv(paste(NewDatapath,allfiles[i],".csv",sep=""), stringsAsFactors=FALSE))
names(NewFiles)[i] <- paste("New",allfiles[i],sep="")
}
# Bind datasets
CompleteFiles <- list()
for(i in 1) {
stopifnot(names(OldFiles[[i]])==names(NewFiles[[i]]))
CompleteFiles[[i]] <- join(OldFiles[[i]],NewFiles[[i]],
type="full",by=c("Date2","SensorID"))
names(CompleteFiles)[i] <- paste("Complete",allfiles[i],sep="")
}
for(i in c(2,4,6)) {
stopifnot(names(OldFiles[[i]])==names(NewFiles[[i]]))
CompleteFiles[[i]] <- join(OldFiles[[i]],NewFiles[[i]],
type="full",by="Date2")
names(CompleteFiles)[i] <- paste("Complete",allfiles[i],sep="")
}
for(i in c(3,5,7)) {
stopifnot(names(OldFiles[[i]])==names(NewFiles[[i]]))
CompleteFiles[[i]] <- join(OldFiles[[i]],NewFiles[[i]],type="full",by="TIMESTAMP2")
names(CompleteFiles)[i] <- paste("Complete",allfiles[i],sep="")
}
CompleteFiles <- list()
for(i in 1:7) {
stopifnot(names(OldFiles[[i]])==names(NewFiles[[i]]))
CompleteFiles[[i]] <- join(OldFiles[[i]],NewFiles[[i]],type="full")
names(CompleteFiles)[i] <- paste("Complete",allfiles[i],sep="")
}
library(ggplot2)
library(lubridate)
fulldaily <- CompleteFiles[[1]]
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgO2pct,color=TopoLocation)) +
geom_point() +
labs(x="Date",y="O2 concentration")
ggsave("O2.pdf", path = DataArchivepath)
str(fulldaily)
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgO2pct,color=Depth)) +
geom_point() +
facet_grid(~Topolocation)
labs(x="Date",y="O2 concentration")
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgO2pct,color=Depth)) +
geom_point() +
facet_grid(~Topolocation) +
labs(x="Date",y="O2 concentration")
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgO2pct,color=Depth)) +
geom_point() +
facet_grid(~TopoLocation) +
labs(x="Date",y="O2 concentration")
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgO2pct,color=Depth)) +
geom_point() +
facet_grid(TopoLocation~) +
labs(x="Date",y="O2 concentration")
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgO2pct,color=Depth)) +
geom_point() +
facet_grid(TopoLocation~) +
labs(x="Date",y="O2 concentration")
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgO2pct,color=Depth)) +
geom_point() +
facet_wrap(TopoLocation~) +
labs(x="Date",y="O2 concentration")
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgO2pct,color=Depth)) +
geom_point() +
facet_wrap(TopoLocation) +
labs(x="Date",y="O2 concentration")
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgO2pct,color=Depth,group=TopoLocation)) +
geom_point() +
facet_wrap(TopoLocation) +
labs(x="Date",y="O2 concentration")
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgO2pct,color=Depth,group=TopoLocation)) +
geom_point() +
facet_grid(TopoLocation~.) +
labs(x="Date",y="O2 concentration")
is.na(fulldaily)
View(fulldaily)
ggplot(na.omit(fulldaily),aes(x=as.Date(Date2),y=avgO2pct,color=Depth,group=TopoLocation)) +
geom_point() +
facet_grid(TopoLocation~.) +
labs(x="Date",y="O2 concentration")
ggplot(na.omit(fulldaily),aes(x=as.Date(Date2),y=avgO2pct,color=Depth,group=TopoLocation)) +
geom_point() +
facet_grid(TopoLocation~.) +
scale_y_continuous(limits=c(-2,22)) +
labs(x="Date",y="O2 concentration")
ggplot(na.omit(fulldaily),aes(x=as.Date(Date2),y=avgO2pct,color=as.factor(Depth),group=TopoLocation)) +
geom_point() +
facet_grid(TopoLocation~.) +
scale_y_continuous(limits=c(-2,22)) +
labs(x="Date",y="O2 concentration")
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgTemp,color=as.factor(Depth))) +
geom_point() +
facet_grid(TopoLocation~.) +
labs(x="Date",y="Soil Temp")
ggplot(na.omit(fulldaily),aes(x=as.Date(Date2),y=avgTemp,color=as.factor(Depth))) +
geom_point() +
facet_grid(TopoLocation~.) +
labs(x="Date",y="Soil Temp")
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgVWC,color=as.factor(Depth))) +
geom_point() +
facet_grid(TopoLocation~.) +
labs(x="Date",y="Volumetric Water Content")
ggplot(na.omit(fulldaily),aes(x=as.Date(Date2),y=avgVWC,color=as.factor(Depth))) +
geom_point() +
facet_grid(TopoLocation~.) +
labs(x="Date",y="Volumetric Water Content")
# load packages
library(plyr)
library(dplyr)
# locate datasets
DataArchivepath <- "~/Desktop/Datalogger_downloads/DepthDataArchive/"
# old data; this should never change unless changing computers
# christine version; uncomment when CSO doing things
#DataArchivepath <- "~/Documents/GITHUB/cso044code_HotSpotsHotMoments/HotSpotsHotMomentsAnalysis/HotSpotsHotMoments-Data-Raw/Sensors/SurfaceDataArchive/"
NewDatapath      <- "~/Desktop/Datalogger_downloads/3-14-17/Depth results/"
# this should change each time data is dowloaded
# christine version; uncomment when CSO doing things
#NewDatapath <- "~/Documents/GITHUB/cso044code_HotSpotsHotMoments/HotSpotsHotMomentsAnalysis/HotSpotsHotMoments-Data-Raw/Sensors/SurfaceNewest/"
# when christine was adding in the very old data
#NewDatapath <- "~/Documents/GITHUB/cso044code_HotSpotsHotMoments/HotSpotsHotMomentsAnalysis/HotSpotsHotMoments-Data-Raw/Sensors/SurfaceOutOfDate/OldestCSOHas/renamedtomatchcode/"
# create master list of file names
allfiles <- c("fulldaily","O2dailywideavg","O2hourly",
"tempdailywideavg","temphourly",
"vwcdailywideavg","vwchourly")
# bring in old data
OldFiles <- list()
for(i in 1:7) {
OldFiles[[i]] <- as.data.frame(read.csv(paste(DataArchivepath,allfiles[i],".csv",sep=""), stringsAsFactors=FALSE))
names(OldFiles)[i] <- paste("Old",allfiles[i],sep="")
}
# bring in new data
NewFiles <- list()
for(i in 1:7) {
NewFiles[[i]] <- as.data.frame(read.csv(paste(NewDatapath,allfiles[i],".csv",sep=""), stringsAsFactors=FALSE))
names(NewFiles)[i] <- paste("New",allfiles[i],sep="")
}
# Bind datasets
CompleteFiles <- list()
for(i in 1:7) {
stopifnot(names(OldFiles[[i]])==names(NewFiles[[i]]))
CompleteFiles[[i]] <- join(OldFiles[[i]],NewFiles[[i]],type="full")
names(CompleteFiles)[i] <- paste("Complete",allfiles[i],sep="")
}
fulldaily <- CompleteFiles[[1]]
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgO2pct,color=as.factor(Depth))) +
geom_point() +
facet_grid(TopoLocation~.) +
scale_y_continuous(limits=c(-2,22)) +
labs(x="Date",y="O2 concentration")
str(fulldaily)
as.Date(fulldaily$Date2)
ggplot(fulldaily,aes(x=Date2,y=avgO2pct,color=as.factor(Depth))) +
geom_point() +
facet_grid(TopoLocation~.) +
scale_y_continuous(limits=c(-2,22)) +
labs(x="Date",y="O2 concentration")
?lubridate
fulldaily$realDate <- parse_date_time(fulldaily$Date2,orders="mdy")
######################################################################
# load packages
library(plyr)
library(dplyr)
# locate datasets
DataArchivepath <- "~/Desktop/Datalogger_downloads/DepthDataArchive/"
# old data; this should never change unless changing computers
# christine version; uncomment when CSO doing things
#DataArchivepath <- "~/Documents/GITHUB/cso044code_HotSpotsHotMoments/HotSpotsHotMomentsAnalysis/HotSpotsHotMoments-Data-Raw/Sensors/SurfaceDataArchive/"
NewDatapath      <- "~/Desktop/Datalogger_downloads/3-14-17/Depth results/"
# this should change each time data is dowloaded
# christine version; uncomment when CSO doing things
#NewDatapath <- "~/Documents/GITHUB/cso044code_HotSpotsHotMoments/HotSpotsHotMomentsAnalysis/HotSpotsHotMoments-Data-Raw/Sensors/SurfaceNewest/"
# when christine was adding in the very old data
#NewDatapath <- "~/Documents/GITHUB/cso044code_HotSpotsHotMoments/HotSpotsHotMomentsAnalysis/HotSpotsHotMoments-Data-Raw/Sensors/SurfaceOutOfDate/OldestCSOHas/renamedtomatchcode/"
# create master list of file names
allfiles <- c("fulldaily","O2dailywideavg","O2hourly",
"tempdailywideavg","temphourly",
"vwcdailywideavg","vwchourly")
# bring in old data
OldFiles <- list()
for(i in 1:7) {
OldFiles[[i]] <- as.data.frame(read.csv(paste(DataArchivepath,allfiles[i],".csv",sep=""), stringsAsFactors=FALSE))
names(OldFiles)[i] <- paste("Old",allfiles[i],sep="")
}
# bring in new data
NewFiles <- list()
for(i in 1:7) {
NewFiles[[i]] <- as.data.frame(read.csv(paste(NewDatapath,allfiles[i],".csv",sep=""), stringsAsFactors=FALSE))
names(NewFiles)[i] <- paste("New",allfiles[i],sep="")
}
# Bind datasets
CompleteFiles <- list()
for(i in 1:7) {
stopifnot(names(OldFiles[[i]])==names(NewFiles[[i]]))
CompleteFiles[[i]] <- join(OldFiles[[i]],NewFiles[[i]],type="full")
names(CompleteFiles)[i] <- paste("Complete",allfiles[i],sep="")
}
fulldaily <- CompleteFiles[[1]]
ggplot(fulldaily,aes(x=as.Date(Date2),y=avgO2pct,color=as.factor(Depth))) +
geom_point() +
facet_grid(TopoLocation~.) +
scale_y_continuous(limits=c(-2,22)) +
labs(x="Date",y="O2 concentration")
fulldaily$realDate <- parse_date_time(fulldaily$Date2,orders="mdy")
ggplot(fulldaily,aes(x=realDate,y=avgO2pct,color=as.factor(Depth))) +
geom_point() +
facet_grid(TopoLocation~.) +
scale_y_continuous(limits=c(-2,22)) +
labs(x="Date",y="O2 concentration")
ggplot(fulldaily,aes(x=realDate,y=avgO2pct,color=as.factor(Depth))) +
geom_point() +
facet_grid(TopoLocation~.) +
labs(x="Date",y="O2 concentration")
ggplot(fulldaily,aes(x=realDate,y=avgTemp,color=as.factor(Depth))) +
geom_point() +
facet_grid(TopoLocation~.) +
labs(x="Date",y="Soil Temp")
ggplot(fulldaily,aes(x=realDate,y=avgVWC,color=as.factor(Depth))) +
geom_point() +
facet_grid(TopoLocation~.) +
labs(x="Date",y="Volumetric Water Content")
for(i in 1:7){
write.csv(CompleteFiles[[i]],
file=paste(DataArchivepath,allfiles[i],".csv",sep=""),
row.names=FALSE)
}
ggplot(fulldaily,aes(x=realDate,y=avgO2pct,color=as.factor(Depth))) +
geom_point() +
facet_grid(TopoLocation~.) +
scale_y_continuous(limits=c(-2,22)) +
labs(x="Date",y="O2 concentration")
ggsave("Depth O2.pdf", path = DataArchivepath)
ggplot(fulldaily,aes(x=realDate,y=avgTemp,color=as.factor(Depth))) +
geom_point() +
facet_grid(TopoLocation~.) +
labs(x="Date",y="Soil Temp")
ggsave("Depth Soil Temp.pdf", path = DataArchivepath)
ggplot(fulldaily,aes(x=realDate,y=avgVWC,color=as.factor(Depth))) +
geom_point() +
facet_grid(TopoLocation~.) +
labs(x="Date",y="Volumetric Water Content")
ggsave("Depth VWC.pdf", path = DataArchivepath)
